# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import TaskCommon_pb2 as TaskCommon__pb2
import TaskMetadata_pb2 as TaskMetadata__pb2


class TaskServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddTask = channel.unary_unary(
        '/TaskService/AddTask',
        request_serializer=TaskMetadata__pb2.TaskMetadata.SerializeToString,
        response_deserializer=TaskMetadata__pb2.TaskReceived.FromString,
        )
    self.AddArgument = channel.stream_unary(
        '/TaskService/AddArgument',
        request_serializer=TaskMetadata__pb2.TaskArgument.SerializeToString,
        response_deserializer=TaskCommon__pb2.Status.FromString,
        )
    self.ExecTask = channel.unary_unary(
        '/TaskService/ExecTask',
        request_serializer=TaskMetadata__pb2.ExecTaskRequest.SerializeToString,
        response_deserializer=TaskCommon__pb2.Status.FromString,
        )
    self.PollTask = channel.unary_unary(
        '/TaskService/PollTask',
        request_serializer=TaskMetadata__pb2.ExecTaskRequest.SerializeToString,
        response_deserializer=TaskMetadata__pb2.TaskResponse.FromString,
        )


class TaskServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddArgument(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PollTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TaskServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddTask': grpc.unary_unary_rpc_method_handler(
          servicer.AddTask,
          request_deserializer=TaskMetadata__pb2.TaskMetadata.FromString,
          response_serializer=TaskMetadata__pb2.TaskReceived.SerializeToString,
      ),
      'AddArgument': grpc.stream_unary_rpc_method_handler(
          servicer.AddArgument,
          request_deserializer=TaskMetadata__pb2.TaskArgument.FromString,
          response_serializer=TaskCommon__pb2.Status.SerializeToString,
      ),
      'ExecTask': grpc.unary_unary_rpc_method_handler(
          servicer.ExecTask,
          request_deserializer=TaskMetadata__pb2.ExecTaskRequest.FromString,
          response_serializer=TaskCommon__pb2.Status.SerializeToString,
      ),
      'PollTask': grpc.unary_unary_rpc_method_handler(
          servicer.PollTask,
          request_deserializer=TaskMetadata__pb2.ExecTaskRequest.FromString,
          response_serializer=TaskMetadata__pb2.TaskResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TaskService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
